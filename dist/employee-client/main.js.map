{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.interceptors.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication/authentication.component.css","webpack:///./src/app/authentication/authentication.component.html","webpack:///./src/app/authentication/authentication.component.ts","webpack:///./src/app/authentication/login/login.component.css","webpack:///./src/app/authentication/login/login.component.html","webpack:///./src/app/authentication/login/login.component.ts","webpack:///./src/app/authentication/register/register.component.css","webpack:///./src/app/authentication/register/register.component.html","webpack:///./src/app/authentication/register/register.component.ts","webpack:///./src/app/employees/employee-details/employee-details.component.css","webpack:///./src/app/employees/employee-details/employee-details.component.html","webpack:///./src/app/employees/employee-details/employee-details.component.ts","webpack:///./src/app/employees/employees.component.css","webpack:///./src/app/employees/employees.component.html","webpack:///./src/app/employees/employees.component.ts","webpack:///./src/app/http-interceptors/auth-interceptor.ts","webpack:///./src/app/http-interceptors/noop-interceptor.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/employees.service.ts","webpack:///./src/app/validators/password-length.ts","webpack:///./src/app/validators/valid-email.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".app-container {\\r\\n  display: inline-flex;\\r\\n  height: -webkit-fill-available;\\r\\n  width: -webkit-fill-available;\\r\\n}\\r\\n.nav-container{\\r\\n  background-color: #f1f1f1;\\r\\n}\\r\\n.main-container{\\r\\n  margin-left: 10px;\\r\\n  width: -webkit-fill-available;\\r\\n}\\r\\n.nav-list {\\r\\n  margin: 10px 50px;\\r\\n  font-family: cursive;\\r\\n}\\r\\n.nav-list a {\\r\\n  text-decoration: none;\\r\\n}\\r\\n.title {\\r\\n  font-family: cursive;\\r\\n  color: #52a2a7;\\r\\n  /* box-shadow: -6px -1px black; */\\r\\n  background-color: #35787d2e;\\r\\n  text-align: center;\\r\\n  margin: 5px 0;\\r\\n}\\r\\n\"","module.exports = \"<h1 class=\\\"title\\\">Scribe Edge</h1>\\r\\n<div class=\\\"app-container\\\">\\r\\n  <div *ngIf=\\\"authenticated\\\" class=\\\"nav-container\\\">\\r\\n    <nav class=\\\"nav-list\\\">\\r\\n      <a routerLink=\\\"employees\\\">Employees</a>\\r\\n    </nav>\\r\\n  </div>\\r\\n  <div class=\\\"main-container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Scribe Edge';\r\n  authenticated: boolean;\r\n  constructor() {\r\n    const accessToken = localStorage.getItem('scribe-access-token');\r\n    this.authenticated = !!(accessToken !== '' && accessToken);\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { NoopInterceptor } from './http-interceptors/noop-interceptor';\r\nimport { AuthInterceptor } from './http-interceptors/auth-interceptor';\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: NoopInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n];\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { EmployeesService } from './services/employees.service';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeesComponent } from './employees/employees.component';\r\nimport { httpInterceptorProviders } from './app.interceptors';\r\nimport { EmployeeDetailsComponent } from './employees/employee-details/employee-details.component';\r\nimport { RegisterComponent } from './authentication/register/register.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { AuthenticationComponent } from './authentication/authentication.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeesComponent,\r\n    EmployeeDetailsComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    AuthenticationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      {\r\n        path: 'employees',\r\n        component: EmployeesComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: AuthenticationComponent\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: '/employees',\r\n        pathMatch: 'full'\r\n      }\r\n    ])\r\n  ],\r\n  providers: [httpInterceptorProviders, EmployeesService, AuthGuardService],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","module.exports = \".container {\\r\\n  text-align: center;\\r\\n  margin: 50px auto;\\r\\n  width: 350px;\\r\\n}\\r\\n\\r\\n.auth-links {\\r\\n  display: flex;\\r\\n  margin: 0 10px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.auth-links a {\\r\\n  cursor: pointer;\\r\\n  text-decoration: none;\\r\\n  font-size: 18px;\\r\\n  font-family: cursive;\\r\\n  padding: 5px 55px;\\r\\n  box-shadow: 0 0 7px darkgrey;\\r\\n  border-radius: 3px;\\r\\n  border: 1px solid transparent;\\r\\n}\\r\\n\\r\\n.auth-links a:hover{\\r\\n  box-shadow: none;\\r\\n  border: 1px solid #a9a9a980;\\r\\n}\\r\\n\\r\\n.auth-link--active{\\r\\n  color: #52a2a7;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"auth-links\\\">\\r\\n    <div class=\\\"auth-links__login\\\">\\r\\n      <a [ngClass]=\\\"{'auth-link--active': authType == 'login'}\\\" (click)=\\\"authType='login'\\\">login</a>\\r\\n    </div>\\r\\n    <div class=\\\"auth-links__register\\\">\\r\\n      <a [ngClass]=\\\"{'auth-link--active': authType == 'register'}\\\" (click)=\\\"authType='register'\\\">Register</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-login *ngIf=\\\"authType == 'login'\\\">\\r\\n  </app-login>\\r\\n  <app-register *ngIf=\\\"authType == 'register'\\\">\\r\\n  </app-register>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authentication',\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.css']\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\r\n  authType: string;\r\n  constructor() {\r\n    this.authType = 'login';\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".login-form {\\r\\n  margin: 10px;\\r\\n  background-color: #efefef80;\\r\\n  box-shadow: 0 1px 20px #c9d3d4;\\r\\n}\\r\\n\\r\\n.login-form-control{\\r\\n  padding:10px 10px 10px 20px;\\r\\n  text-align: left;\\r\\n  font-family: cursive;\\r\\n}\\r\\n\\r\\n.login-form input {\\r\\n  margin: 10px;\\r\\n  padding: 10px;\\r\\n  width: 250px;\\r\\n  border: 1px solid #d6e5e8;\\r\\n}\\r\\n\\r\\n.login-form button {\\r\\n  margin: 10px 0;\\r\\n  padding: 10px;\\r\\n  /* font-family: cursive; */\\r\\n  border: none;\\r\\n  box-shadow: 0px 2px 13px #989898;\\r\\n  background-color: #52a2a7;\\r\\n  color: white;\\r\\n  border-radius: 5px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.login-form-errors {\\r\\n  text-align: left;\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\\r\\n.login-form-errors span {\\r\\n  display: inherit;\\r\\n  background-color: #ff5f5f;\\r\\n  color: white;\\r\\n  padding: 5px 5px;\\r\\n  border: 1px solid red;\\r\\n  margin: 5px;\\r\\n  border-radius: 5px;\\r\\n  font-family: cursive;\\r\\n}\\r\\n\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\" class=\\\"login-form\\\" (ngSubmit)=\\\"loginSubmit()\\\">\\r\\n  <div class=\\\"login-form-control\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Your email\\\"\\r\\n      formControlName=\\\"email\\\">\\r\\n    </div>\\r\\n    <div class=\\\"login-form-control\\\">\\r\\n      <label for=\\\"password\\\">Password</label>\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Your password\\\"\\r\\n      formControlName=\\\"password\\\">\\r\\n    </div>\\r\\n      <button type=\\\"submit\\\" name=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n</form>\\r\\n<div class=\\\"login-form-errors\\\">\\r\\n  <span *ngIf=\\\"email.errors?.invalidEmail  && email.touched\\\">Enter a valid email!</span>\\r\\n  <span *ngIf=\\\"password.errors?.length && password.touched\\\">Password must be minimum of 6 letters</span>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { validatePassword } from '../../validators/password-length';\r\nimport { validateEmail } from '../../validators/valid-email';\r\nimport { AuthService, AuthResponse } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm : FormGroup;\r\n  constructor(private fb: FormBuilder, public service: AuthService, private router: Router) {\r\n    if (this.service.checkLogIn()) {\r\n      this.router.navigate(['employees']);\r\n    }\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, validateEmail]],\r\n      password: ['', [Validators.required, validatePassword]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get email() {\r\n    return this.loginForm.get('email');\r\n  }\r\n  get password() {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n  loginSubmit() {\r\n    const postData = this.loginForm.value;\r\n    this.service.loginUser(postData)\r\n      .subscribe((response: AuthResponse) => {\r\n        if (response.auth) {\r\n          localStorage.setItem('scribe-access-token', response.token);\r\n          // this.router.navigate(['employees']);\r\n          window.location.href = document.location.origin + '/employees';\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \".register-form {\\r\\n  margin: 10px;\\r\\n  background-color: #efefef80;\\r\\n  box-shadow: 0px 1px 20px #c9d3d4;\\r\\n}\\r\\n\\r\\n.register-form-control {\\r\\n  padding: 10px 10px 10px 20px;\\r\\n  text-align: left;\\r\\n  font-family: cursive;\\r\\n}\\r\\n\\r\\n.register-form input {\\r\\n  margin: 10px;\\r\\n  padding: 10px;\\r\\n  width: 250px;\\r\\n  border: 1px solid #d6e5e8;\\r\\n}\\r\\n\\r\\n.register-form button {\\r\\n  margin: 10px 0;\\r\\n  padding: 10px;\\r\\n  /* font-family: cursive; */\\r\\n  border: none;\\r\\n  box-shadow: 0px 2px 13px #989898;\\r\\n  background-color: #52a2a7;\\r\\n  color: white;\\r\\n  border-radius: 5px;\\r\\n  font-size: 16px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.register-form-errors {\\r\\n  text-align: left;\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\\r\\n.register-form-errors span {\\r\\n  display: inherit;\\r\\n  background-color: #ff5f5f;\\r\\n  color: white;\\r\\n  padding: 5px 5px;\\r\\n  border: 1px solid red;\\r\\n  margin: 5px;\\r\\n  border-radius: 5px;\\r\\n  font-family: cursive;\\r\\n}\\r\\n\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" class=\\\"register-form\\\" (ngSubmit)=\\\"loginSubmit()\\\">\\r\\n  <div class=\\\"register-form-control\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"username\\\" placeholder=\\\"create a username\\\"\\r\\n      formControlName=\\\"name\\\">\\r\\n    </div>\\r\\n  <div class=\\\"register-form-control\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Your email\\\"\\r\\n      formControlName=\\\"email\\\">\\r\\n    </div>\\r\\n    <div class=\\\"register-form-control\\\">\\r\\n      <label for=\\\"password\\\">Password</label>\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Your password\\\"\\r\\n      formControlName=\\\"password\\\">\\r\\n    </div>\\r\\n      <button type=\\\"submit\\\" name=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Register</button>\\r\\n</form>\\r\\n<div class=\\\"register-form-errors\\\">\\r\\n  <span *ngIf=\\\"email.errors?.invalidEmail  && email.touched\\\">Enter a valid email!</span>\\r\\n  <span *ngIf=\\\"password.errors?.length && password.touched\\\">Password must be minimum of 6 letters</span>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { validatePassword } from '../../validators/password-length';\r\nimport { validateEmail } from '../../validators/valid-email';\r\nimport { AuthService, AuthResponse } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm : FormGroup;\r\n  @Output() loggedIn = new EventEmitter<RegisterComponent>();\r\n  form: FormGroup;\r\n  constructor(private fb: FormBuilder, private service: AuthService, private router: Router) {\r\n    this.registerForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, validateEmail]],\r\n      password: ['', [Validators.required, validatePassword]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get email() {\r\n    return this.registerForm.get('email');\r\n}\r\n  get password() {\r\n    return this.registerForm.get('password');\r\n  }\r\n\r\n  loginSubmit() {\r\n    const postData = this.registerForm.value;\r\n    this.service.registerUser(postData)\r\n      .subscribe((response: AuthResponse) => {\r\n        if (response.auth) {\r\n          localStorage.setItem('scribe-access-token', response.token);\r\n          // this.router.navigate(['employees']);\r\n          window.location.href = document.location.origin + '/employees';\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n {{title}}\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee-details',\r\n  templateUrl: './employee-details.component.html',\r\n  styleUrls: ['./employee-details.component.css']\r\n})\r\nexport class EmployeeDetailsComponent implements OnInit {\r\n  title = 'employee details';\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".employee-card {\\r\\n  display: inline-block;\\r\\n  padding: 20px;\\r\\n  border: 2px solid white;\\r\\n  box-shadow: 0px 1px 11px #d2d2d2;\\r\\n  margin: 5px;\\r\\n  border-radius: 5px;\\r\\n  cursor: pointer;\\r\\n  font-size: 18px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"employee-card\\\" *ngFor=\\\"let e of employees\\\">{{e.name}}</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport {EmployeesService} from '../services/employees.service';\r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  templateUrl: './employees.component.html',\r\n  styleUrls: ['./employees.component.css']\r\n})\r\nexport class EmployeesComponent {\r\n  employees: string[];\r\n\r\n  constructor(private employeeService: EmployeesService) {\r\n    this.employeeService.getEmployees()\r\n      .subscribe((employees: any) => this.employees = employees);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  AuthToken = localStorage.getItem('scribe-access-token');\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.log('Auth Interceptors called!');\r\n    if (this.AuthToken !== '' && this.AuthToken) {\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('x-access-token', this.AuthToken)\r\n      });\r\n      console.log('x-access-token: ', authReq.headers.get('x-access-token'));\r\n      return next.handle(authReq);\r\n    } else {\r\n      console.log('No scribe access token has been set!');\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class NoopInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n      console.log('noop interceptor called!');\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private service: AuthService, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const loggedIn = this.service.checkLogIn();\r\n    if (!loggedIn) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseURL = environment.baseURL;\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  checkLogIn() {\r\n    const JWT = localStorage.getItem('scribe-access-token');\r\n    return !!(JWT !== '' && JWT);\r\n  }\r\n  registerUser(data) {\r\n    return this.http.post(`${this.baseURL}/auth/register`, data);\r\n  }\r\n  loginUser(data) {\r\n    return this.http.post(`${this.baseURL}/auth/login`, data);\r\n  }\r\n}\r\n\r\nexport interface AuthResponse {\r\n  auth: string;\r\n  token: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeesService {\r\n  private baseURL = environment.baseURL;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEmployees() {\r\n    return this.http.get(`${this.baseURL}/employee`);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function validatePassword(control: AbstractControl) {\r\n  // console.log(control.value.length);\r\n  if (control.value.length < 6) {\r\n    return { length: true };\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function validateEmail(control: AbstractControl) {\r\n  const email_regex = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\r\n  // console.log(control.value);\r\n  if (email_regex.test(control.value)) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    invalidEmail: true\r\n  };\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseURL: 'http://localhost:8080',\r\n  authToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVjNzkwMWUxZjBlNzIyMjcyOGM0YTEzOCIsImlhdCI6MTU1MTQzNDIwOSwiZXhwIjoxNTUxNTIwNjA5fQ.BsFvAlGArR2oKZ1qa2rsn7vUKXumKzYu4UWEf7QXP1s'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}